version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: production_nginx
    volumes:
      - ./reverse_proxy.conf.template:/etc/nginx/conf.d/reverse_proxy.conf.template
      - ./reverse_proxy_https.conf.template:/etc/nginx/conf.d/reverse_proxy_https.conf.template
      - ./simple_nginx.conf:/etc/nginx/conf.d/simple_nginx.conf
      - ./init-nginx.sh:/init-nginx.sh
      - ./init-nginx-simple.sh:/init-nginx-simple.sh
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./temporary.html:/usr/share/nginx/html/temporary.html
      - ./test.html:/usr/share/nginx/html/test.html  # Map test.html
      - static_volume:/usr/share/nginx/static
    ports:
      - 80:80
      - 443:443
    networks:
      - internal_network
    entrypoint: ["/bin/sh", "/init-nginx.sh"] #["/bin/sh", "/init-nginx-simple.sh"]
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - certbot
    restart: unless-stopped  # Add this line for restart policy

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c"
    command: >
      'if ! [ -e "/etc/letsencrypt/live/$${DOMAIN}/fullchain.pem" ]; then
       certbot certonly --webroot --webroot-path=/var/www/certbot --email $${EMAIL} --agree-tos --no-eff-email -d $${DOMAIN} -d www.$${DOMAIN};
      fi && trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${EMAIL}
    networks:
      - internal_network
    restart: unless-stopped  # Add this line for restart policy

  web:
    image: tileonjvr/courtroll-test:latest
    command: gunicorn courtroll.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/code/staticfiles
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=courtroll.settings
    depends_on:
      - db
    networks:
      - internal_network
    restart: unless-stopped  # Add this line for restart policy

  celery_worker:
    image: tileonjvr/courtroll-test:latest
    command: celery -A courtroll worker --loglevel=info
    volumes:
      - static_volume:/static
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=courtroll.settings
    depends_on:
      - db
      - redis
      - web
    networks:
      - internal_network
    restart: unless-stopped  # Add this line for restart policy

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${CR_DB_NAME}
      POSTGRES_USER: ${CR_DB_USER}
      POSTGRES_PASSWORD: ${CR_DB_PASSWORD}
    networks:
      - internal_network
    restart: unless-stopped  # Add this line for restart policy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - internal_network
    command: ["redis-server", "--bind", "internal_network"]
    restart: unless-stopped  # Add this line for restart policy

networks:
  internal_network:

volumes:
  static_volume:
  postgres_data:
  certbot_conf:
  certbot_www: